import type { ComponentProps, FC, PropsWithChildren, ReactNode } from 'react';
export interface keepBreadCrumbTheme {
    breadCrumbWithBorder: string;
    item: {
        base: string;
        chevron: string;
        href: {
            off: string;
            on: string;
        };
        icon: string;
        iconWrapper: string;
        disabled: string;
        activeItem: {
            base: string;
            border: string;
            bar: string;
        };
    };
    list: string;
}
/**
 * Props for the Breadcrumb component.
 * @interface BreadcrumbProps
 * @extends {PropsWithChildren<ComponentProps<'nav'>>}
 */
export interface BreadcrumbProps extends PropsWithChildren<ComponentProps<'nav'>> {
    /**
     * The separator icon to be displayed between breadcrumb items.
     * @type {ReactNode}
     */
    separatorIcon?: ReactNode;
    /**
     * Determines whether the breadcrumb should have a border.
     * @type {boolean}
     * @default false
     */
    breadCrumbWithBorder?: boolean;
    /**
     * Additional CSS class name for the breadcrumb component.
     * @type {string}
     * @default ''
     */
    className?: string;
    /**
     * The style for the breadcrumb list.
     * @type {string}
     * @default ''
     */
    listStyle?: string;
}
export declare const Breadcrumb: FC<BreadcrumbProps> & {
    Item: import("react").ForwardRefExoticComponent<import("./BreadcrumbItem").BreadcrumbItemProps & import("react").RefAttributes<HTMLAnchorElement | HTMLSpanElement>>;
};
