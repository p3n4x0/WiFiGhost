import type { ComponentProps, ReactNode } from 'react';
import type { KeepBoolean, KeepColors } from '../../Keep/KeepTheme';
export interface keepTextAreaTheme {
    base: string;
    colors: TextareaColors;
    disabled: string;
    withBg: {
        on: {
            colors: TextareaColors;
        };
        off: string;
    };
    withBorder: KeepBoolean;
    withShadow: KeepBoolean;
}
export interface TextareaColors extends Pick<KeepColors, 'gray' | 'info' | 'error' | 'warning' | 'success'> {
    [key: string]: string;
}
/**
 * Props for the Textarea component.
 * @interface TextareaProps
 * @extends {Omit<ComponentProps<'textarea'>, 'className' | 'color' | 'ref'>}
 */
export interface TextareaProps extends Omit<ComponentProps<'textarea'>, 'className' | 'color' | 'ref'> {
    /**
     * If true, the textarea will have a shadow.
     * @type {boolean}
     * @default false
     */
    shadow?: boolean;
    /**
     * The helper text to display below the textarea.
     * @type {ReactNode}
     * @default null
     */
    helperText?: ReactNode;
    /**
     * If true, the textarea will have a background color.
     * @type {boolean}
     * @default false
     */
    withBg?: boolean;
    /**
     * If true, the textarea will have a border.
     * @type {boolean}
     * @default true
     */
    border?: boolean;
    /**
     * If true, the textarea will be disabled.
     * @type {boolean}
     * @default false
     */
    disabled?: boolean;
    /**
     * The color of the textarea.
     * @type {keyof TextareaColors}
     * @default 'default'
     */
    color?: keyof TextareaColors;
    /**
     * The CSS class name for the textarea.
     * @type {string}
     * @default ''
     */
    className?: string;
}
export declare const Textarea: import("react").ForwardRefExoticComponent<TextareaProps & import("react").RefAttributes<HTMLTextAreaElement>>;
