import type { FC, ReactNode } from 'react';
import { KeepSizes } from '../../Keep/KeepTheme';
export interface keepToggleTheme {
    base: string;
    circleBase: string;
    enabledBg: {
        on: {
            primary: string;
            slate: string;
        };
        off: string;
    };
    enabledCircle: {
        on: ToggleSizes;
        off: ToggleSizes;
    };
    disabled: string;
    size: ToggleSizes;
    label: ToggleSizes;
    withIconBase: string;
}
/**
 * Props for the Toggle component.
 * @interface ToggleProps
 */
export interface ToggleProps {
    /**
     * The label to be displayed alongside the toggle.
     * @type {ReactNode}
     * @default 'Toggle'
     */
    label?: ReactNode;
    /**
     * Determines whether to display an icon alongside the toggle.
     * @type {boolean}
     * @default false
     */
    withIcon?: boolean;
    /**
     * Determines whether the toggle is disabled.
     * @type {boolean}
     * @default false
     */
    disabled?: boolean;
    /**
     * The size of the toggle.
     * @type {keyof ToggleSizes}
     * @default 'sm'
     */
    size?: keyof ToggleSizes;
    /**
     * The background color of the toggle.
     * @type {'primary' | 'slate'}
     * @default 'primary'
     */
    bgColor?: 'primary' | 'slate';
    /**
     * Additional CSS class name for the toggle component.
     * @type {string}
     * @default ''
     */
    className?: string;
    /**
     * Additional CSS styles for the toggle circle.
     * @type {string}
     * @default ''
     */
    circleStyle?: string;
    /**
     * Additional CSS styles for the toggle label.
     * @type {string}
     * @default ''
     */
    labelStyle?: string;
}
export interface ToggleSizes extends Pick<KeepSizes, 'sm' | 'md' | 'lg'> {
    [key: string]: string;
}
export declare const Toggle: FC<ToggleProps>;
