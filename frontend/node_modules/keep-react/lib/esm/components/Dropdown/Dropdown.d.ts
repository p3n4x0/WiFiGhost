import type { Dispatch, FC, PropsWithChildren, ReactNode, SetStateAction } from 'react';
import React from 'react';
import { DeepPartial } from '../../helpers/deep-partial';
import type { ButtonProps } from '../Button/Button';
import { FloatingProps, keepFloatingTheme } from '../Floating';
import type { keepDropdownDividerTheme } from './DropdownDivider';
import type { keepDropdownHeaderTheme } from './DropdownHeader';
import { keepDropdownItemTheme } from './DropdownItem';
export interface keepDropdownFloatingTheme extends keepFloatingTheme, keepDropdownDividerTheme, keepDropdownHeaderTheme {
    item: keepDropdownItemTheme;
}
export interface keepDropdownTheme {
    floating: keepDropdownFloatingTheme;
    content: string;
    arrowIcon: string;
}
/**
 * Props for the Dropdown component.
 * @interface DropdownProps
 * @extends {PropsWithChildren}
 * @extends {Pick<FloatingProps, 'placement' | 'trigger'>}
 * @extends {Omit<ButtonProps, 'theme'>}
 */
export interface DropdownProps extends PropsWithChildren, Pick<FloatingProps, 'placement' | 'trigger'>, Omit<ButtonProps, 'theme'> {
    /**
     * Determines whether to show the arrow icon.
     * @type {boolean}
     * @default true
     */
    arrowIcon?: boolean;
    /**
     * Determines whether the dropdown should be dismissed when clicked.
     * @type {boolean}
     * @default true
     */
    dismissOnClick?: boolean;
    /**
     * Determines whether to show a floating arrow.
     * @type {boolean}
     * @default false
     */
    floatingArrow?: boolean;
    /**
     * The label for the dropdown.
     * @type {ReactNode}
     * @default ''
     */
    label: ReactNode;
    /**
     * The theme for the dropdown.
     * @type {DeepPartial<keepDropdownTheme>}
     * @default {}
     */
    theme?: DeepPartial<keepDropdownTheme>;
}
/**
 * Props for the TriggerWrapper component.
 * @interface TriggerWrapperProps
 * @extends {ButtonProps}
 */
export interface TriggerWrapperProps extends ButtonProps {
    setButtonWidth?: Dispatch<SetStateAction<number | undefined>>;
}
export declare const Dropdown: FC<DropdownProps> & {
    Item: FC<import("./DropdownItem").DropdownItemProps>;
    Header: FC<{
        children?: ReactNode;
    } & React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement>>;
    Divider: FC<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>>;
};
