import type { ComponentProps, FC, PropsWithChildren, ReactNode } from 'react';
import { KeepColors, KeepSizes } from '../../Keep/KeepTheme';
export interface keepBadgeTheme {
    base: string;
    href: string;
    badgeType: {
        default: {
            colorType: {
                light: {
                    color: BadgeColors;
                };
                strong: {
                    color: BadgeColors;
                };
            };
        };
        outline: {
            colorType: {
                light: {
                    color: BadgeColors;
                };
                strong: {
                    color: BadgeColors;
                };
            };
        };
        text: {
            colorType: {
                light: {
                    color: BadgeColors;
                };
                strong: {
                    color: BadgeColors;
                };
            };
        };
    };
    icon: {
        off: string;
        on: string;
        size: BadgeSizes;
    };
    size: BadgeSizes;
    dot: string;
    dotPosition: {
        left: string;
        right: string;
    };
}
/**
 * Props for the Badge component.
 * @interface BadgeProps
 * @extends {PropsWithChildren<Omit<ComponentProps<'span'>, 'className' | 'color'>>}
 */
export interface BadgeProps extends PropsWithChildren<Omit<ComponentProps<'span'>, 'className' | 'color'>> {
    /**
     * The color of the badge.
     * @type {keyof BadgeColors}
     * @default 'info'
     */
    color?: keyof BadgeColors;
    /**
     * The type of color for the badge.
     * @type {'light' | 'strong'}
     * @default 'strong'
     */
    colorType?: 'light' | 'strong';
    /**
     * The type of badge.
     * @type {'default' | 'outline' | 'text'}
     * @default 'default'
     */
    badgeType?: 'default' | 'outline' | 'text';
    /**
     * The URL to navigate to when the badge is clicked.
     * @type {string}
     * @default ''
     */
    href?: string;
    /**
     * The icon to display within the badge.
     * @type {ReactNode}
     * @default ''
     */
    icon?: ReactNode;
    /**
     * The position of the icon within the badge.
     * @type {'left' | 'right'}
     * @default 'left'
     */
    iconPosition?: 'left' | 'right';
    /**
     * Additional CSS class name for the badge.
     * @type {string}
     * @default ''
     */
    className?: string;
    /**
     * The size of the badge.
     * @type {keyof BadgeSizes}
     * @default 'xs'
     */
    size?: keyof BadgeSizes;
    /**
     * The content of the badge.
     * @type {ReactNode}
     */
    children?: ReactNode;
    /**
     * Whether to display a dot on the badge.
     * @type {boolean}
     * @default false
     */
    dot?: boolean;
    /**
     * The position of the dot within the badge.
     * @type {'left' | 'right'}
     * @default 'left'
     */
    dotPosition?: 'left' | 'right';
    /**
     * Custom CSS style for the dot.
     * @type {string}
     * @default ''
     */
    dotStyle?: string;
    /**
     * Custom CSS style for the icon.
     * @type {string}
     * @default ''
     */
    iconStyle?: string;
}
export interface BadgeColors extends Pick<KeepColors, 'error' | 'gray' | 'info' | 'success' | 'warning'> {
    [key: string]: string;
}
export interface BadgeSizes extends Pick<KeepSizes, 'xs' | 'sm'> {
    [key: string]: string;
}
export declare const Badge: FC<BadgeProps>;
