import type { ComponentProps, FC, PropsWithChildren } from 'react';
import type { DeepPartial } from '../../helpers/deep-partial';
import type { KeepSidebarCollapseTheme } from './SidebarCollapse';
import type { KeepSidebarCTATheme } from './SidebarCTA';
import type { KeepSidebarItemTheme } from './SidebarItem';
import type { KeepSidebarLogoTheme } from './SidebarLogo';
import { KeepBoolean } from '../../Keep/KeepTheme';
export interface KeepSidebarTheme {
    root: {
        base: string;
        collapsed: KeepBoolean;
        inner: string;
    };
    collapse: KeepSidebarCollapseTheme;
    cta: KeepSidebarCTATheme;
    item: KeepSidebarItemTheme;
    items: string;
    itemGroup: string;
    logo: KeepSidebarLogoTheme;
}
/**
 * Props for the Sidebar component.
 * @interface SidebarProps
 * @extends {PropsWithChildren}
 */
export interface SidebarProps extends PropsWithChildren, ComponentProps<'div'> {
    /**
     * The behavior of the sidebar when collapsed.
     * - 'collapse': The sidebar collapses to a smaller width.
     * - 'hide': The sidebar is completely hidden.
     */
    collapseBehavior?: 'collapse' | 'hide';
    /**
     * Determines whether the sidebar is initially collapsed.
     */
    collapsed?: boolean;
    /**
     * The theme configuration for the sidebar.
     */
    theme?: DeepPartial<KeepSidebarTheme>;
    /**
     * Additional CSS class name for the sidebar.
     */
    className?: string;
}
export declare const Sidebar: FC<SidebarProps> & {
    Collapse: FC<import("./SidebarCollapse").SidebarCollapseProps>;
    CTA: FC<import("./SidebarCTA").SidebarCTAProps>;
    Item: import("react").ForwardRefExoticComponent<Omit<import("./SidebarItem").SidebarItemProps, "ref"> & import("react").RefAttributes<Element>>;
    Items: FC<import("./SidebarItems").SidebarItemsProps>;
    ItemGroup: FC<import("./SidebarItemGroup").SidebarItemGroupProps>;
    Logo: FC<import("./SidebarLogo").SidebarLogoProps>;
};
